{"remainingRequest":"E:\\Github\\code\\TRMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Github\\code\\TRMS\\src\\views\\Console\\module\\userc.vue?vue&type=style&index=0&id=27ebab07&lang=scss&scoped=true&","dependencies":[{"path":"E:\\Github\\code\\TRMS\\src\\views\\Console\\module\\userc.vue","mtime":1584600032538},{"path":"E:\\Github\\code\\TRMS\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2VhcmNoVXNlckJveCB7DQogIHdpZHRoOiAyMDBweDsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCi5pbnB1dC1jZW50ZXJkaWFsb2ctYm94ew0KICAgIHdpZHRoOiA3MCU7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQouaXRlbXsNCiAgbWFyZ2luOiA0cHg7DQp9DQo="},{"version":3,"sources":["userc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userc.vue","sourceRoot":"src/views/Console/module","sourcesContent":["<template>\r\n  <div id=\"userc\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :xs=\"24\" :md=\"4\">\r\n        <el-input v-model=\"searchUser\" placeholder=\"输入用户名搜索\" class=\"searchUserBox\" />\r\n      </el-col>\r\n      <el-col :xs=\"24\" :md=\"6\" hidden-lg-and-down>\r\n        <el-button-group>\r\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"queryUser\">搜索</el-button>\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"centerDialogOpen('edit')\">编辑</el-button>\r\n          <el-button type=\"primary\" icon=\"el-icon-delete\" @click=\"centerDialogOpen('delete')\">删除</el-button>\r\n        </el-button-group>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-dialog :title=\"centerDialogTitle\" :visible.sync=\"centerDialogVisible\" width=\"30%\" center destroy-on-close >\r\n      <el-form class=\"input-centerdialog-box\" :rules=\"rules\" ref=\"dialogData\" :model=\"dialogData\"  status-icon >\r\n        <el-form-item prop=\"userName\">\r\n          <el-input v-model=\"dialogData.userName\" placeholder=\"请输入用户名\"/>\r\n        </el-form-item>\r\n          \r\n        <div class=\"black-space-30\" v-if=\"centerDialogTitle!='删除用户'\"></div>\r\n        <el-form-item v-if=\"centerDialogTitle!='删除用户'\">\r\n          <el-input v-model=\"dialogData.userLoc\"  placeholder=\"设置用户管辖范围\"/> \r\n        </el-form-item>\r\n          \r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"centerDialogClose\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogSubmit('dialogData')\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <el-table\r\n      v-loading=\"tableLoading\"\r\n      :data=\"tableData.item\"\r\n      border\r\n      style=\"width: 100%\"\r\n      max-height=\"430\"\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column prop=\"id\" label=\"编号\" width=\"160\" sortable></el-table-column>\r\n      <el-table-column prop=\"userName\" label=\"用户名\" width=\"240\"></el-table-column>\r\n      <el-table-column prop=\"userPhone\" label=\"联系方式\" width=\"240\"></el-table-column>\r\n      <el-table-column\r\n        prop=\"userType\"\r\n        label=\"用户类型\"\r\n        width=\"120\"\r\n        :filters=\"[{text:'普通用户',value:'普通用户'},{text:'管理员',value:'管理员'}]\"\r\n        :filter-method=\"filterHandler\"\r\n      ></el-table-column>\r\n      <el-table-column prop=\"userLoc\" label=\"管辖范围\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tooltip class=\"item\" effect=\"light\" content=\" 该操作不可逆！！\" placement=\"bottom\">\r\n            <el-button\r\n              :type=\"scope.row.userType=='管理员' ? 'danger':'success'\"\r\n              size=\"small\"\r\n              @click=\"setUser(scope.row)\"\r\n            >{{scope.row.userType==\"管理员\"? \"取消\":\"设为\"}}管理员</el-button>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, onMounted, watch } from \"@vue/composition-api\";\r\nimport{ Query_user,Set_user, Update_user,Delete_user } from \"@/api/userc.js\"\r\nexport default {\r\n  name: \"userc\",\r\n  setup(props,{root,refs}) {\r\n \r\n\r\n\r\n    //弹窗控制器\r\n    const centerDialogVisible=ref(false);\r\n    const centerDialogTitle=ref(\"\");\r\n    const centerDialogOpen=(type)=>{\r\n        centerDialogVisible.value = true;\r\n        centerDialogTitle.value = type==\"edit\"? \"更新用户信息\":\"删除用户\";\r\n    };\r\n    const centerDialogClose=()=>{\r\n        centerDialogVisible.value=false;\r\n    };\r\n    \r\n\r\n    //弹窗表格\r\n    const dialogData = reactive({\r\n        userName:\"\",\r\n        userLoc: \"\",\r\n    })\r\n\r\n    //清除弹窗表格\r\n    const resetForm = () => {\r\n      dialogData.userName=\"\";\r\n      dialogData.userLoc=\"\";\r\n    };\r\n    watch(() => centerDialogTitle.value, () => {\r\n      resetForm();\r\n    })\r\n    //弹窗表格验证\r\n    let validateuserName = (rule, value, callback) => {\r\n      var reg = /^[a-zA-Z0-9]{3,15}$/;\r\n      if (value === \"\") {\r\n        return callback(new Error(\"用户名不能为空\"));\r\n      } else if (!reg.test(value)) {\r\n        return callback(new Error(\"用户名格式有误\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const rules = reactive({\r\n      userName: [{ validator: validateuserName, trigger: \"blur\" }],\r\n    });\r\n\r\n    const dialogSubmit=formName=>{\r\n      refs[formName].validate(valid => {\r\n        if (valid) {\r\n          console.log(centerDialogTitle)\r\n          if(centerDialogTitle.value==\"删除用户\"){\r\n            deleteUser();\r\n          }else{\r\n            updateUser();\r\n          }\r\n        }\r\n      })\r\n    };\r\n    const tableLoading = ref(false);\r\n    //表格数据\r\n    const tableData = reactive({\r\n      item: [\r\n        {\r\n          id: \"1\",\r\n          userName: \"xhy\",\r\n          userPhone: \"123\",\r\n          userType: \"管理员\",\r\n          userLoc: \"dsd\"\r\n        }\r\n      ]\r\n    });\r\n    //表格数据总数\r\n    const total=ref(0)\r\n    //表格中多选框记录\r\n    const multipleSelection = reactive([]);\r\n    const handleSelectionChange = val => {\r\n      multipleSelection.values = val;\r\n    };\r\n    //用户名搜索数据\r\n    const searchUser = ref(\"\");\r\n    //用户类型过滤器\r\n    const filterHandler = (value, row, column) => {\r\n      const property = column[\"property\"];\r\n      return row[property] === value;\r\n    };\r\n\r\n    //用户数据查询接口\r\n    const queryUser=()=>{\r\n      let queryData={\r\n        UserName:searchUser.value,\r\n        pageNumber:\"1\",\r\n        pageSize:\"100\",\r\n      }\r\n      tableLoading.value=true;\r\n      Query_user(queryData).then((response)=>{\r\n          let data=response.data.data.data;\r\n          total.value=response.data.data.total;\r\n          console.log(data)\r\n          //数据过滤\r\n          data.forEach(element => {\r\n              element.userType=element.userType==\"admin\"?\"管理员\":\"普通用户\";\r\n          });\r\n          tableData.item=data;\r\n          tableLoading.value=false;\r\n      }).catch((error)=>{\r\n          console.log(\"用户查询失败\");\r\n          tableLoading.value=false;\r\n      })\r\n    }\r\n\r\n    //更新用户信息接口\r\n    const updateUser=()=>{\r\n      let updateData={\r\n        userName:dialogData.userName,\r\n        userLoc:dialogData.userLoc\r\n      }\r\n      Update_user(updateData).then((response)=>{\r\n        centerDialogVisible.value=false;\r\n        console.log(\"设置管辖范围成功\")\r\n        queryUser();\r\n      }).catch((error)=>{\r\n        console.log(\"设置失败\")\r\n      })\r\n    }\r\n\r\n    //删除用户接口\r\n    const deleteUser=()=>{\r\n      let deleteData={\r\n        userName:dialogData.userName,\r\n      }\r\n      Delete_user(deleteData).then((response)=>{\r\n        centerDialogVisible.value=false;\r\n        console.log(\"删除用户成功\")\r\n        console.log(response)\r\n        queryUser();\r\n      }).catch((error)=>{\r\n        console.log(\"删除用户失败\")\r\n      })\r\n    }\r\n\r\n\r\n    //管理员设置\\取消接口\r\n    const setUser=(user)=>{\r\n      let setData={\r\n          userName:user.userName,\r\n          controlType:user.userType==\"管理员\"? \"cancel\":\"set\",\r\n      }\r\n      Set_user(setData).then((response)=>{\r\n        console.log(\"操作成功\")\r\n        queryUser();\r\n      }).catch((error)=>{\r\n          console.log(\"操作失败\")\r\n      })\r\n    }  \r\n    onMounted(()=>{\r\n      queryUser();\r\n    })\r\n    return {\r\n      //ref\r\n      searchUser,centerDialogVisible,centerDialogTitle,dialogData,tableLoading,total,\r\n      //reactive\r\n      tableData,multipleSelection,rules,\r\n      //methods\r\n      handleSelectionChange,filterHandler,centerDialogClose,centerDialogOpen,queryUser,updateUser,deleteUser,setUser,dialogSubmit\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.searchUserBox {\r\n  width: 200px;\r\n  margin-bottom: 20px;\r\n}\r\n.input-centerdialog-box{\r\n    width: 70%;\r\n    margin: 0 auto;\r\n}\r\n.item{\r\n  margin: 4px;\r\n}\r\n</style>"]}]}