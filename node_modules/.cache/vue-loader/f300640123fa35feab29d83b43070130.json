{"remainingRequest":"E:\\Github\\code\\TRMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Github\\code\\TRMS\\src\\views\\Layout\\Components\\nav.vue?vue&type=style&index=0&id=362d19f6&lang=scss&scoped=true&","dependencies":[{"path":"E:\\Github\\code\\TRMS\\src\\views\\Layout\\Components\\nav.vue","mtime":1583224055612},{"path":"E:\\Github\\code\\TRMS\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Github\\code\\TRMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCiNuYXYtd3JhcCB7DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgdG9wOiAwOw0KICBsZWZ0OiAwOw0KICB3aWR0aDogJGxlZnQ7DQogIGhlaWdodDogMTAwdmg7DQogIGJhY2tncm91bmQtY29sb3I6ICMzNDRhNWY7DQogIA0KfQ0K"},{"version":3,"sources":["nav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"nav.vue","sourceRoot":"src/views/Layout/Components","sourcesContent":["<template>\r\n  <div id=\"nav-wrap\">\r\n    <el-menu default-active=\"1-4-1\" class=\"el-menu-vertical-demo\" :collapse=\"isCollapse\" background-color=\"transparent\" text-color=\"#fff\" router>\r\n        <el-menu-item v-for=\" item in routers.children\" :key=\"item.id\" :index=\"item.path\">\r\n            <i :class=\"item.meta.icon\"></i>\r\n            <span slot=\"title\">{{item.meta.name}}</span>\r\n        </el-menu-item>\r\n    </el-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, onMounted } from \"@vue/composition-api\"\r\nexport default {\r\n    name:'nav-wrap',\r\n    setup(props,context){\r\n        const isCollapse = ref(true);\r\n        const routers= reactive(context.root.$router.options.routes[2]) ;\r\n\r\n        onMounted(() => {});\r\n\r\n        return{\r\n          isCollapse,\r\n          routers\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#nav-wrap {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: $left;\r\n  height: 100vh;\r\n  background-color: #344a5f;\r\n  \r\n}\r\n</style>"]}]}